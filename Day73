//LEETCODE--->47. Permutations II

class Solution {
public:
    void check(int index,vector<int> &nums, vector<int> &ds, vector<int>&vis, vector<vector<int>> &ans)
    {
        if(ds.size()==nums.size())
        {
            ans.push_back(ds);
            return;
        }
        set<int> st;
        for(int i=0;i<nums.size();i++)
        {
            if(vis[i]==0)
            {
                if(st.find(nums[i])!=st.end()) continue;
                st.insert(nums[i]);
                
                vis[i]=1;
                ds.push_back(nums[i]);
                check(i+1,nums,ds,vis,ans);
                ds.pop_back();
                vis[i]=0;
            }
        }

    }

    vector<vector<int>> permuteUnique(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        vector<vector<int>> ans;
        vector<int> vis(nums.size(),0);
        vector<int> ds;

        check(0,nums,ds,vis,ans);

        return ans;
    }
    };
